// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NodeSetup should open help popup 1`] = `
<View
  style={
    {
      "borderRadius": 16,
      "marginLeft": 12,
      "marginRight": 12,
      "overflow": "hidden",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "stretch",
          "backgroundColor": "#FEEDE5",
          "gap": 12,
          "paddingBottom": 24,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 16,
        },
        [
          {
            "backgroundColor": "#D7F2FE",
          },
          {
            "alignItems": "stretch",
          },
        ],
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        [
          {
            "color": "#2B1911",
            "fontFamily": "Baloo2-Regular",
            "fontSize": 16,
            "letterSpacing": 0.16,
            "lineHeight": 24,
          },
          {
            "fontFamily": "Baloo2-Bold",
            "fontSize": 24,
            "letterSpacing": 0.24,
            "lineHeight": 32,
            "width": "100%",
          },
          false,
        ]
      }
    >
      use your own node
    </Text>
    <Text
      allowFontScaling={false}
      style={
        [
          {
            "color": "#2B1911",
            "fontFamily": "Baloo2-Regular",
            "fontSize": 16,
            "letterSpacing": 0.16,
            "lineHeight": 24,
          },
          undefined,
          false,
        ]
      }
    >
      You can instruct the Peach wallet to use your own electrum server for getting information from the blockchain.

If you don’t, you’ll be trusting the Peach node to give you correct information.
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "stretch",
          "backgroundColor": "#F56522",
          "flexDirection": "row",
          "justifyContent": "space-between",
        },
        {
          "backgroundColor": "#099DE2",
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "flexGrow": 1,
          "gap": 4,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 8,
        }
      }
    >
      <test-file-stub
        fill="#FFFCFA"
        style={
          [
            {
              "height": 16,
              "width": 16,
            },
            undefined,
          ]
        }
      />
      <Text
        allowFontScaling={false}
        style={
          [
            {
              "color": "#2B1911",
              "fontFamily": "Baloo2-Regular",
              "fontSize": 16,
              "letterSpacing": 0.16,
              "lineHeight": 24,
            },
            [
              {
                "color": "#FFFCFA",
                "fontFamily": "Baloo2-SemiBold",
                "fontSize": 16,
                "letterSpacing": 0.16,
                "lineHeight": 28,
              },
              undefined,
            ],
            false,
          ]
        }
      >
        help
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "flexDirection": "row-reverse",
          "flexGrow": 1,
          "gap": 4,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 8,
        }
      }
    >
      <test-file-stub
        fill="#FFFCFA"
        style={
          [
            {
              "height": 16,
              "width": 16,
            },
            undefined,
          ]
        }
      />
      <Text
        allowFontScaling={false}
        style={
          [
            {
              "color": "#2B1911",
              "fontFamily": "Baloo2-Regular",
              "fontSize": 16,
              "letterSpacing": 0.16,
              "lineHeight": 24,
            },
            [
              {
                "color": "#FFFCFA",
                "fontFamily": "Baloo2-SemiBold",
                "fontSize": 16,
                "letterSpacing": 0.16,
                "lineHeight": 28,
              },
              undefined,
            ],
            false,
          ]
        }
      >
        close
      </Text>
    </View>
  </View>
</View>
`;

exports[`NodeSetup should render with default settings 1`] = `
<Screen
  header={<NodeSetupHeader />}
>
  <ForwardRef
    contentContainerStyle={
      {
        "flexGrow": 1,
      }
    }
    contentStyle={
      {
        "flexGrow": 1,
        "gap": 12,
        "justifyContent": "center",
      }
    }
  >
    <Toggle
      enabled={false}
      onPress={[MockFunction]}
      style={
        {
          "justifyContent": "space-between",
          "paddingLeft": 24,
          "paddingRight": 24,
        }
      }
      textStyle={
        {
          "color": "#7D675E",
        }
      }
    >
      use your own node
    </Toggle>
    <Toggle
      disabled={true}
      enabled={false}
      onPress={[MockFunction]}
      style={
        {
          "justifyContent": "space-between",
          "paddingLeft": 24,
          "paddingRight": 24,
        }
      }
      textStyle={
        {
          "color": "#7D675E",
        }
      }
    >
      use SSL
    </Toggle>
    <View
      style={
        {
          "opacity": 0.33,
        }
      }
    >
      <URLInput
        disabled={true}
        errorMessage={[]}
        label="node address"
        onChange={[MockFunction]}
        placeholder="192.168.0.1:50001"
        value=""
      />
    </View>
  </ForwardRef>
  <Button
    disabled={true}
    iconId="share2"
    onPress={[MockFunction]}
    style={
      {
        "alignSelf": "center",
      }
    }
  >
    check connection
  </Button>
</Screen>
`;

exports[`NodeSetup should render with valid node settings 1`] = `
<Screen
  header={<NodeSetupHeader />}
>
  <ForwardRef
    contentContainerStyle={
      {
        "flexGrow": 1,
      }
    }
    contentStyle={
      {
        "flexGrow": 1,
        "gap": 12,
        "justifyContent": "center",
      }
    }
  >
    <Toggle
      enabled={true}
      onPress={[MockFunction]}
      style={
        {
          "justifyContent": "space-between",
          "paddingLeft": 24,
          "paddingRight": 24,
        }
      }
      textStyle={
        {
          "color": "#7D675E",
        }
      }
    >
      use your own node
    </Toggle>
    <Toggle
      disabled={true}
      enabled={true}
      onPress={[MockFunction]}
      style={
        {
          "justifyContent": "space-between",
          "paddingLeft": 24,
          "paddingRight": 24,
        }
      }
      textStyle={
        {
          "color": "#7D675E",
        }
      }
    >
      use SSL
    </Toggle>
    <View
      style={false}
    >
      <URLInput
        disabled={true}
        errorMessage={[]}
        icons={
          [
            [
              "edit3",
              [MockFunction],
            ],
          ]
        }
        label="node address"
        onChange={[MockFunction]}
        placeholder="192.168.0.1:50001"
        value=""
      />
    </View>
  </ForwardRef>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "gap": 4,
        "justifyContent": "center",
      }
    }
  >
    <PeachText
      style={
        {
          "fontFamily": "Baloo2-SemiBold",
          "fontSize": 14,
          "letterSpacing": 0.5,
          "lineHeight": 24,
          "textTransform": "uppercase",
        }
      }
    >
      connected to your node
    </PeachText>
    <Icon
      color="#65A519"
      id="check"
      size={16}
    />
  </View>
</Screen>
`;
