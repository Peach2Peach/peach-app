// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PayoutAddress should render correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "height": "100%",
      "justifyContent": "space-between",
    }
  }
>
  <PeachScrollView
    contentContainerStyle={
      Object {
        "height": "100%",
        "justifyContent": "center",
        "paddingBottom": 32,
        "paddingLeft": 32,
        "paddingRight": 32,
        "paddingTop": 32,
      }
    }
    style={
      Object {
        "flexShrink": 1,
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <PeachText
      style={
        Object {
          "fontFamily": "Baloo2-Bold",
          "fontSize": 20,
          "letterSpacing": 0.2,
          "lineHeight": 32,
          "textAlign": "center",
        }
      }
    >
      set custom address
    </PeachText>
    <Input
      errorMessage=""
      onChange={[MockFunction]}
      placeholder="address label"
      style={
        Object {
          "marginTop": 16,
        }
      }
      value="addressLabel"
    />
    <BitcoinAddressInput
      errorMessage=""
      onChange={[MockFunction]}
      value="address"
    />
    <OpenWallet
      address="address"
      style={
        Object {
          "height": 24,
        }
      }
    />
  </PeachScrollView>
  <PrimaryButton
    disabled={false}
    narrow={true}
    onPress={[MockFunction]}
    style={
      Object {
        "bottom": 24,
        "marginTop": 64,
        "position": "absolute",
      }
    }
  >
    confirm
  </PrimaryButton>
</View>
`;

exports[`PayoutAddress should render correctly when isUpdated is true 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "height": "100%",
      "justifyContent": "space-between",
    }
  }
>
  <PeachScrollView
    contentContainerStyle={
      Object {
        "height": "100%",
        "justifyContent": "center",
        "paddingBottom": 32,
        "paddingLeft": 32,
        "paddingRight": 32,
        "paddingTop": 32,
      }
    }
    style={
      Object {
        "flexShrink": 1,
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <PeachText
      style={
        Object {
          "fontFamily": "Baloo2-Bold",
          "fontSize": 20,
          "letterSpacing": 0.2,
          "lineHeight": 32,
          "textAlign": "center",
        }
      }
    >
      set custom address
    </PeachText>
    <Input
      errorMessage=""
      onChange={[MockFunction]}
      placeholder="address label"
      style={
        Object {
          "marginTop": 16,
        }
      }
      value="addressLabel"
    />
    <BitcoinAddressInput
      errorMessage=""
      onChange={[MockFunction]}
      value="address"
    />
    <View
      style={
        Object {
          "flexDirection": "row",
          "height": 24,
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <PeachText
        style={
          Object {
            "fontFamily": "Baloo2-SemiBold",
            "fontSize": 14,
            "letterSpacing": 0.5,
            "lineHeight": 24,
            "textTransform": "uppercase",
          }
        }
      >
        address set
      </PeachText>
      <Icon
        color="#05A85A"
        id="check"
        style={
          Object {
            "height": 20,
            "marginLeft": 4,
            "width": 20,
          }
        }
      />
    </View>
  </PeachScrollView>
  <PrimaryButton
    disabled={true}
    narrow={true}
    onPress={[MockFunction]}
    style={
      Object {
        "bottom": 24,
        "marginTop": 64,
        "position": "absolute",
      }
    }
  >
    confirm
  </PrimaryButton>
</View>
`;

exports[`PayoutAddress should render correctly when type is refund 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "height": "100%",
      "justifyContent": "space-between",
    }
  }
>
  <PeachScrollView
    contentContainerStyle={
      Object {
        "height": "100%",
        "justifyContent": "center",
        "paddingBottom": 32,
        "paddingLeft": 32,
        "paddingRight": 32,
        "paddingTop": 32,
      }
    }
    style={
      Object {
        "flexShrink": 1,
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <PeachText
      style={
        Object {
          "fontFamily": "Baloo2-Bold",
          "fontSize": 20,
          "letterSpacing": 0.2,
          "lineHeight": 32,
          "textAlign": "center",
        }
      }
    >
      set custom refund address
    </PeachText>
    <Input
      errorMessage=""
      onChange={[MockFunction]}
      placeholder="address label"
      style={
        Object {
          "marginTop": 16,
        }
      }
      value="addressLabel"
    />
    <BitcoinAddressInput
      errorMessage=""
      onChange={[MockFunction]}
      value="address"
    />
    <OpenWallet
      address="address"
      style={
        Object {
          "height": 24,
        }
      }
    />
  </PeachScrollView>
  <PrimaryButton
    disabled={false}
    narrow={true}
    onPress={[MockFunction]}
    style={
      Object {
        "bottom": 24,
        "marginTop": 64,
        "position": "absolute",
      }
    }
  >
    next
  </PrimaryButton>
</View>
`;
