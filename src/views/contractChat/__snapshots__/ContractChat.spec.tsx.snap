// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContractChat should render chat disabled message when disabled 1`] = `
<View
  onLayout={[Function]}
  style={
    [
      {
        "flexBasis": "0%",
        "flexGrow": 1,
        "flexShrink": 1,
      },
      {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "flexBasis": "0%",
        "flexGrow": 1,
        "flexShrink": 1,
      }
    }
  >
    <View
      style={
        [
          {
            "borderBottomLeftRadius": 8,
            "borderBottomRightRadius": 8,
            "borderBottomWidth": 1,
          },
          {
            "paddingTop": 0,
            "zIndex": 1,
          },
          {
            "backgroundColor": "#FFF9F6",
          },
          {
            "borderColor": "#FEEDE5",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "gap": 8,
              "paddingBottom": 6,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 6,
            },
            {},
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexBasis": "0%",
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "gap": 4,
            }
          }
        >
          <Text
            allowFontScaling={false}
            numberOfLines={1}
            style={
              [
                {
                  "color": "#2B1911",
                  "fontFamily": "Baloo2-Regular",
                  "fontSize": 16,
                  "letterSpacing": 0.16,
                  "lineHeight": 24,
                },
                [
                  {
                    "fontFamily": "Baloo2-Bold",
                    "fontSize": 16,
                    "letterSpacing": 0.16,
                    "lineHeight": 26,
                  },
                  {},
                  {
                    "color": "#2B1911",
                  },
                  {
                    "flexBasis": "0%",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ],
                false,
              ]
            }
          >
            PC‑1‑2
          </Text>
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "gap": 10,
              "justifyContent": "flex-end",
            }
          }
        />
      </View>
    </View>
    <View
      style={
        [
          {
            "flexBasis": "0%",
            "flexGrow": 1,
            "flexShrink": 1,
          },
          false,
          {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
            {},
            {
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "flexBasis": "0%",
                "flexGrow": 1,
                "flexShrink": 1,
              },
              {
                "opacity": 0.5,
              },
            ]
          }
        >
          <RCTScrollView
            ListFooterComponent={
              <View
                style={
                  {
                    "height": 8,
                  }
                }
              />
            }
            data={[]}
            getItem={[Function]}
            getItemCount={[Function]}
            initialNumToRender={22}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onRefresh={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            onScrollToIndexFailed={[Function]}
            onViewableItemsChanged={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
              />
            }
            refreshing={false}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={
              [
                {
                  "onViewableItemsChanged": [Function],
                  "viewabilityConfig": undefined,
                },
              ]
            }
          >
            <RCTRefreshControl />
            <View>
              <View
                onLayout={[Function]}
              >
                <View
                  style={
                    {
                      "height": 8,
                    }
                  }
                />
              </View>
            </View>
          </RCTScrollView>
        </View>
        <Text
          allowFontScaling={false}
          style={
            [
              {
                "color": "#2B1911",
                "fontFamily": "Baloo2-Regular",
                "fontSize": 16,
                "letterSpacing": 0.16,
                "lineHeight": 24,
              },
              {
                "color": "#9F8C82",
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
                "textAlign": "center",
              },
              false,
            ]
          }
        >
          chat has been disabled
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`ContractChat should render correct when chat enabled 1`] = `
<View
  onLayout={[Function]}
  style={
    [
      {
        "flexBasis": "0%",
        "flexGrow": 1,
        "flexShrink": 1,
      },
      {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "flexBasis": "0%",
        "flexGrow": 1,
        "flexShrink": 1,
      }
    }
  >
    <View
      style={
        [
          {
            "borderBottomLeftRadius": 8,
            "borderBottomRightRadius": 8,
            "borderBottomWidth": 1,
          },
          {
            "paddingTop": 0,
            "zIndex": 1,
          },
          {
            "backgroundColor": "#FFF9F6",
          },
          {
            "borderColor": "#FEEDE5",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "gap": 8,
              "paddingBottom": 6,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 6,
            },
            {},
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexBasis": "0%",
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "gap": 4,
            }
          }
        >
          <Text
            allowFontScaling={false}
            numberOfLines={1}
            style={
              [
                {
                  "color": "#2B1911",
                  "fontFamily": "Baloo2-Regular",
                  "fontSize": 16,
                  "letterSpacing": 0.16,
                  "lineHeight": 24,
                },
                [
                  {
                    "fontFamily": "Baloo2-Bold",
                    "fontSize": 16,
                    "letterSpacing": 0.16,
                    "lineHeight": 26,
                  },
                  {},
                  {
                    "color": "#2B1911",
                  },
                  {
                    "flexBasis": "0%",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ],
                false,
              ]
            }
          >
            PC‑1‑2
          </Text>
        </View>
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "gap": 10,
              "justifyContent": "flex-end",
            }
          }
        />
      </View>
    </View>
    <View
      style={
        [
          {
            "flexBasis": "0%",
            "flexGrow": 1,
            "flexShrink": 1,
          },
          false,
          {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
            {},
            {
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 0,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "flexBasis": "0%",
                "flexGrow": 1,
                "flexShrink": 1,
              },
              {
                "opacity": 0.5,
              },
            ]
          }
        >
          <RCTScrollView
            ListFooterComponent={
              <View
                style={
                  {
                    "height": 8,
                  }
                }
              />
            }
            data={[]}
            getItem={[Function]}
            getItemCount={[Function]}
            initialNumToRender={22}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onRefresh={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            onScrollToIndexFailed={[Function]}
            onViewableItemsChanged={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
              />
            }
            refreshing={false}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={
              [
                {
                  "onViewableItemsChanged": [Function],
                  "viewabilityConfig": undefined,
                },
              ]
            }
          >
            <RCTRefreshControl />
            <View>
              <View
                onLayout={[Function]}
              >
                <View
                  style={
                    {
                      "height": 8,
                    }
                  }
                />
              </View>
            </View>
          </RCTScrollView>
        </View>
        <View
          style={
            {
              "width": "100%",
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "flex-end",
                  "backgroundColor": "#D7F2FE",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "maxHeight": 160,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                },
                {
                  "opacity": 0.5,
                },
              ]
            }
          >
            <TextInput
              allowFontScaling={false}
              autoCapitalize="sentences"
              blurOnSubmit={false}
              editable={false}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onEndEditing={[Function]}
              placeholder="your message"
              placeholderTextColor="#93D6F5"
              removeClippedSubviews={false}
              returnKeyType="send"
              style={
                {
                  "color": "#2B1911",
                  "flexShrink": 1,
                  "fontFamily": "Baloo2-Regular",
                  "fontSize": 16,
                  "letterSpacing": 0.16,
                  "lineHeight": 24,
                  "paddingBottom": 12,
                  "paddingLeft": 4,
                  "paddingRight": 0,
                  "paddingTop": 12,
                  "width": "100%",
                }
              }
              textAlignVertical="center"
            />
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                  "paddingBottom": 12,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 12,
                }
              }
            >
              <test-file-stub
                fill="#099DE2"
                style={
                  [
                    {
                      "height": 24,
                      "width": 24,
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
