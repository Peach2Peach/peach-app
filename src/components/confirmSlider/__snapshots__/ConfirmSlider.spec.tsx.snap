// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfirmSlider renders correctly 1`] = `
<View
  onLayout={[Function]}
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    [
      {
        "backgroundColor": "#FEEDE5",
        "borderRadius": 9999,
        "maxWidth": "100%",
        "overflow": "hidden",
        "width": "100%",
      },
      {
        "borderColor": "#FCCCB6",
        "borderWidth": 1,
      },
      false,
      undefined,
    ]
  }
>
  <ForwardRef(AnimatedComponentWrapper)
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
        },
        {
          "transform": [
            {
              "translateX": 4,
            },
          ],
        },
      ]
    }
  >
    <ForwardRef(AnimatedComponentWrapper)
      style={
        [
          {
            "position": "absolute",
            "right": "100%",
          },
          {
            "opacity": 0,
            "width": 184,
          },
        ]
      }
    >
      <ConfirmSliderLabel>
        label2
      </ConfirmSliderLabel>
    </ForwardRef(AnimatedComponentWrapper)>
    <ForwardRef(AnimatedComponentWrapper)
      style={
        [
          {
            "backgroundColor": "rgba(245, 101, 34, 1)",
            "width": 72,
          },
          {
            "borderRadius": 9999,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "marginTop": 4,
            "paddingBottom": 8,
            "paddingTop": 8,
          },
        ]
      }
    >
      <Icon
        color="#FFF9F6"
        id="checkCircle"
        style={
          {
            "height": 24,
            "width": 24,
          }
        }
      />
      <Icon
        color="#FFF9F6"
        id="chevronsRight"
        style={
          {
            "height": 24,
            "marginLeft": 4,
            "width": 24,
          }
        }
      />
    </ForwardRef(AnimatedComponentWrapper)>
    <ForwardRef(AnimatedComponentWrapper)
      style={
        {
          "opacity": 1,
          "width": 184,
        }
      }
    >
      <ConfirmSliderLabel>
        label1
      </ConfirmSliderLabel>
    </ForwardRef(AnimatedComponentWrapper)>
  </ForwardRef(AnimatedComponentWrapper)>
</View>
`;

exports[`ConfirmSlider renders correctly when disabled 1`] = `
<View
  onLayout={[Function]}
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    [
      {
        "backgroundColor": "#FEEDE5",
        "borderRadius": 9999,
        "maxWidth": "100%",
        "overflow": "hidden",
        "width": "100%",
      },
      {
        "borderColor": "#FCCCB6",
        "borderWidth": 1,
      },
      {
        "opacity": 0.5,
      },
      undefined,
    ]
  }
>
  <ForwardRef(AnimatedComponentWrapper)
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
        },
        {
          "transform": [
            {
              "translateX": 4,
            },
          ],
        },
      ]
    }
  >
    <ForwardRef(AnimatedComponentWrapper)
      style={
        [
          {
            "position": "absolute",
            "right": "100%",
          },
          {
            "opacity": 0,
            "width": 184,
          },
        ]
      }
    >
      <ConfirmSliderLabel>
        label2
      </ConfirmSliderLabel>
    </ForwardRef(AnimatedComponentWrapper)>
    <ForwardRef(AnimatedComponentWrapper)
      style={
        [
          {
            "backgroundColor": "rgba(245, 101, 34, 1)",
            "width": 72,
          },
          {
            "borderRadius": 9999,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "marginTop": 4,
            "paddingBottom": 8,
            "paddingTop": 8,
          },
        ]
      }
    >
      <Icon
        color="#FFF9F6"
        id="checkCircle"
        style={
          {
            "height": 24,
            "width": 24,
          }
        }
      />
      <Icon
        color="#FFF9F6"
        id="chevronsRight"
        style={
          {
            "height": 24,
            "marginLeft": 4,
            "width": 24,
          }
        }
      />
    </ForwardRef(AnimatedComponentWrapper)>
    <ForwardRef(AnimatedComponentWrapper)
      style={
        {
          "opacity": 1,
          "width": 184,
        }
      }
    >
      <ConfirmSliderLabel>
        label1
      </ConfirmSliderLabel>
    </ForwardRef(AnimatedComponentWrapper)>
  </ForwardRef(AnimatedComponentWrapper)>
</View>
`;

exports[`ConfirmSlider renders with different icon 1`] = `
<View
  onLayout={[Function]}
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    [
      {
        "backgroundColor": "#FEEDE5",
        "borderRadius": 9999,
        "maxWidth": "100%",
        "overflow": "hidden",
        "width": "100%",
      },
      {
        "borderColor": "#FCCCB6",
        "borderWidth": 1,
      },
      false,
      undefined,
    ]
  }
>
  <ForwardRef(AnimatedComponentWrapper)
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
        },
        {
          "transform": [
            {
              "translateX": 4,
            },
          ],
        },
      ]
    }
  >
    <ForwardRef(AnimatedComponentWrapper)
      style={
        [
          {
            "position": "absolute",
            "right": "100%",
          },
          {
            "opacity": 0,
            "width": 184,
          },
        ]
      }
    >
      <ConfirmSliderLabel>
        label2
      </ConfirmSliderLabel>
    </ForwardRef(AnimatedComponentWrapper)>
    <ForwardRef(AnimatedComponentWrapper)
      style={
        [
          {
            "backgroundColor": "rgba(245, 101, 34, 1)",
            "width": 72,
          },
          {
            "borderRadius": 9999,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "marginTop": 4,
            "paddingBottom": 8,
            "paddingTop": 8,
          },
        ]
      }
    >
      <Icon
        color="#FFF9F6"
        id="award"
        style={
          {
            "height": 24,
            "width": 24,
          }
        }
      />
      <Icon
        color="#FFF9F6"
        id="chevronsRight"
        style={
          {
            "height": 24,
            "marginLeft": 4,
            "width": 24,
          }
        }
      />
    </ForwardRef(AnimatedComponentWrapper)>
    <ForwardRef(AnimatedComponentWrapper)
      style={
        {
          "opacity": 1,
          "width": 184,
        }
      }
    >
      <ConfirmSliderLabel>
        label1
      </ConfirmSliderLabel>
    </ForwardRef(AnimatedComponentWrapper)>
  </ForwardRef(AnimatedComponentWrapper)>
</View>
`;
