// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NextButton renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#FCCCB6",
      "borderRadius": 9999,
      "flexDirection": "row",
      "height": 40,
      "justifyContent": "center",
      "opacity": 1,
      "paddingLeft": 16,
      "paddingRight": 16,
      "width": 156,
    }
  }
>
  <Text
    allowFontScaling={false}
    ellipsizeMode="tail"
    numberOfLines={1}
    style={
      [
        {
          "color": "#2B1911",
          "fontFamily": "Baloo2-Regular",
          "fontSize": 16,
          "letterSpacing": 0.16,
          "lineHeight": 24,
        },
        [
          {
            "color": "#FFFCFA",
          },
          {
            "fontFamily": "Baloo2-SemiBold",
            "fontSize": 14,
            "letterSpacing": 0.5,
            "lineHeight": 24,
            "minWidth": 96,
            "paddingLeft": 8,
            "paddingRight": 8,
            "textAlign": "center",
            "textTransform": "uppercase",
          },
        ],
        false,
      ]
    }
  >
    next
  </Text>
</View>
`;

exports[`NextButton renders correctly when disabled 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#FCCCB6",
      "borderRadius": 9999,
      "flexDirection": "row",
      "height": 40,
      "justifyContent": "center",
      "opacity": 1,
      "paddingLeft": 16,
      "paddingRight": 16,
      "width": 156,
    }
  }
>
  <Text
    allowFontScaling={false}
    ellipsizeMode="tail"
    numberOfLines={1}
    style={
      [
        {
          "color": "#2B1911",
          "fontFamily": "Baloo2-Regular",
          "fontSize": 16,
          "letterSpacing": 0.16,
          "lineHeight": 24,
        },
        [
          {
            "color": "#FFFCFA",
          },
          {
            "fontFamily": "Baloo2-SemiBold",
            "fontSize": 14,
            "letterSpacing": 0.5,
            "lineHeight": 24,
            "minWidth": 96,
            "paddingLeft": 8,
            "paddingRight": 8,
            "textAlign": "center",
            "textTransform": "uppercase",
          },
        ],
        false,
      ]
    }
  >
    next
  </Text>
</View>
`;

exports[`NextButton should show forbidden payment method popup when selected one 1`] = `
<View
  style={
    {
      "borderRadius": 16,
      "marginLeft": 12,
      "marginRight": 12,
      "overflow": "hidden",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "stretch",
          "backgroundColor": "#FEEDE5",
          "gap": 12,
          "paddingBottom": 24,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 16,
        },
        [
          {
            "backgroundColor": "#D7F2FE",
          },
          {
            "alignItems": "stretch",
          },
        ],
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        [
          {
            "color": "#2B1911",
            "fontFamily": "Baloo2-Regular",
            "fontSize": 16,
            "letterSpacing": 0.16,
            "lineHeight": 24,
          },
          undefined,
          false,
        ]
      }
    >
      You do not have access to Paypal yet. Due to PayPal high risks of charge back, this payment method only becomes accessible when: 

- You unlock the #superTrader badge (more than 20 trades completed)

- Your reputation score is minimum 4.5 peaches

- You already traded at least CHF 2100 during the past yearÂ 
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "alignSelf": "stretch",
          "backgroundColor": "#F56522",
          "flexDirection": "row",
          "justifyContent": "space-between",
        },
        {
          "backgroundColor": "#099DE2",
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "flexGrow": 1,
          "gap": 4,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 8,
        }
      }
    >
      <test-file-stub
        fill="#FFFCFA"
        style={
          [
            {
              "height": 16,
              "width": 16,
            },
            undefined,
          ]
        }
      />
      <Text
        allowFontScaling={false}
        style={
          [
            {
              "color": "#2B1911",
              "fontFamily": "Baloo2-Regular",
              "fontSize": 16,
              "letterSpacing": 0.16,
              "lineHeight": 24,
            },
            [
              {
                "color": "#FFFCFA",
                "fontFamily": "Baloo2-SemiBold",
                "fontSize": 16,
                "letterSpacing": 0.16,
                "lineHeight": 28,
              },
              undefined,
            ],
            false,
          ]
        }
      >
        help
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "flexDirection": "row-reverse",
          "flexGrow": 1,
          "gap": 4,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 8,
        }
      }
    >
      <test-file-stub
        fill="#FFFCFA"
        style={
          [
            {
              "height": 16,
              "width": 16,
            },
            undefined,
          ]
        }
      />
      <Text
        allowFontScaling={false}
        style={
          [
            {
              "color": "#2B1911",
              "fontFamily": "Baloo2-Regular",
              "fontSize": 16,
              "letterSpacing": 0.16,
              "lineHeight": 24,
            },
            [
              {
                "color": "#FFFCFA",
                "fontFamily": "Baloo2-SemiBold",
                "fontSize": 16,
                "letterSpacing": 0.16,
                "lineHeight": 28,
              },
              undefined,
            ],
            false,
          ]
        }
      >
        close
      </Text>
    </View>
  </View>
</View>
`;
