// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfirmSlider renders correctly 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    [
      {
        "borderRadius": 20,
        "borderWidth": 1,
        "overflow": "hidden",
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
        "width": "100%",
      },
      {
        "backgroundColor": "#FEEDE5",
      },
      {
        "borderColor": "#FCCCB6",
      },
      undefined,
    ]
  }
  testID="confirmSlider"
>
  <ForwardRef(AnimatedComponentWrapper)
    onLayout={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
        },
        {
          "transform": [
            {
              "translateX": 0,
            },
          ],
        },
      ]
    }
  >
    <ConfirmSliderLabel
      opacity={0}
      style={
        {
          "position": "absolute",
          "right": "100%",
        }
      }
      width={204}
    >
      label2
    </ConfirmSliderLabel>
    <SliderKnob
      color="#F56522"
      enabled={true}
      iconId="checkCircle"
      pan={0}
    />
    <ConfirmSliderLabel
      opacity={1}
      width={204}
    >
      label1
    </ConfirmSliderLabel>
  </ForwardRef(AnimatedComponentWrapper)>
</View>
`;

exports[`ConfirmSlider renders correctly when not enabled 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    [
      {
        "borderRadius": 20,
        "borderWidth": 1,
        "overflow": "hidden",
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
        "width": "100%",
      },
      {
        "backgroundColor": "#FEEDE5",
      },
      {
        "borderColor": "#FCCCB6",
      },
      undefined,
    ]
  }
  testID="confirmSlider"
>
  <ForwardRef(AnimatedComponentWrapper)
    onLayout={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
        },
        {
          "transform": [
            {
              "translateX": 0,
            },
          ],
        },
      ]
    }
  >
    <ConfirmSliderLabel
      opacity={0}
      style={
        {
          "position": "absolute",
          "right": "100%",
        }
      }
      width={204}
    >
      label2
    </ConfirmSliderLabel>
    <SliderKnob
      color="#F56522"
      enabled={false}
      iconId="checkCircle"
      pan={0}
    />
    <ConfirmSliderLabel
      opacity={1}
      width={204}
    >
      label1
    </ConfirmSliderLabel>
  </ForwardRef(AnimatedComponentWrapper)>
</View>
`;

exports[`ConfirmSlider renders with different icon 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    [
      {
        "borderRadius": 20,
        "borderWidth": 1,
        "overflow": "hidden",
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
        "width": "100%",
      },
      {
        "backgroundColor": "#FEEDE5",
      },
      {
        "borderColor": "#FCCCB6",
      },
      undefined,
    ]
  }
  testID="confirmSlider"
>
  <ForwardRef(AnimatedComponentWrapper)
    onLayout={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
        },
        {
          "transform": [
            {
              "translateX": 0,
            },
          ],
        },
      ]
    }
  >
    <ConfirmSliderLabel
      opacity={0}
      style={
        {
          "position": "absolute",
          "right": "100%",
        }
      }
      width={204}
    >
      label2
    </ConfirmSliderLabel>
    <SliderKnob
      color="#F56522"
      enabled={true}
      iconId="award"
      pan={0}
    />
    <ConfirmSliderLabel
      opacity={1}
      width={204}
    >
      label1
    </ConfirmSliderLabel>
  </ForwardRef(AnimatedComponentWrapper)>
</View>
`;
