// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProgressDonut should render correctly 1`] = `
<View
  style={
    [
      {
        "alignItems": "center",
      },
      undefined,
    ]
  }
>
  <PeachText
    style={
      [
        {
          "color": "#F56522",
          "fontSize": 12,
          "fontWeight": "bold",
          "textAlign": "center",
        },
        {},
      ]
    }
  >
    Donut Test
  </PeachText>
  <View
    style={
      [
        {
          "height": 32,
          "width": 32,
        },
        {},
      ]
    }
  >
    <Svg
      preserveAspectRatio="xMidYMid meet"
      style={
        {
          "height": "100%",
          "width": "100%",
        }
      }
      viewBox="0 0 32 32"
    >
      <G
        originX="16"
        originY="16"
        rotation={-90}
      >
        <Circle
          cx="50%"
          cy="50%"
          fill="transparent"
          r={12.5}
          stroke="#FEEDE5"
          strokeWidth={7}
        />
        <ForwardRef(AnimatedComponentWrapper)
          cx="50%"
          cy="50%"
          fill="transparent"
          r={12.5}
          stroke="#F56522"
          strokeDasharray={78.53981633974483}
          strokeDashoffset={62.83185307179586}
          strokeWidth={7}
        />
      </G>
    </Svg>
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <PeachText
        style={
          [
            {
              "fontSize": 12,
              "fontWeight": "bold",
            },
            {},
            undefined,
          ]
        }
      >
        1
      </PeachText>
    </View>
  </View>
</View>
`;

exports[`ProgressDonut should render correctly for iOS 1`] = `
<View
  style={
    [
      {
        "alignItems": "center",
      },
      undefined,
    ]
  }
>
  <PeachText
    style={
      [
        {
          "color": "#F56522",
          "fontSize": 12,
          "fontWeight": "bold",
          "textAlign": "center",
        },
        {},
      ]
    }
  >
    Donut Test
  </PeachText>
  <View
    style={
      [
        {
          "height": 32,
          "width": 32,
        },
        {},
      ]
    }
  >
    <Svg
      preserveAspectRatio="xMidYMid meet"
      style={
        {
          "height": "100%",
          "width": "100%",
        }
      }
      viewBox="0 0 32 32"
    >
      <G
        originX="16"
        originY="16"
        rotation={-90}
      >
        <Circle
          cx="50%"
          cy="50%"
          fill="transparent"
          r={12.5}
          stroke="#FEEDE5"
          strokeWidth={7}
        />
        <ForwardRef(AnimatedComponentWrapper)
          cx="50%"
          cy="50%"
          fill="transparent"
          r={12.5}
          stroke="#F56522"
          strokeDasharray={78.53981633974483}
          strokeDashoffset={62.83185307179586}
          strokeWidth={7}
        />
      </G>
    </Svg>
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <PeachText
        style={
          [
            {
              "fontSize": 12,
              "fontWeight": "bold",
            },
            {},
            {
              "marginTop": 2,
            },
          ]
        }
      >
        1
      </PeachText>
    </View>
  </View>
</View>
`;

exports[`ProgressDonut should render correctly for medium viewports 1`] = `
<View
  style={
    [
      {
        "alignItems": "center",
      },
      undefined,
    ]
  }
>
  <PeachText
    style={
      [
        {
          "color": "#F56522",
          "fontSize": 12,
          "fontWeight": "bold",
          "textAlign": "center",
        },
        {
          "fontSize": 14,
        },
      ]
    }
  >
    Donut Test
  </PeachText>
  <View
    style={
      [
        {
          "height": 32,
          "width": 32,
        },
        {
          "height": 40,
          "width": 40,
        },
      ]
    }
  >
    <Svg
      preserveAspectRatio="xMidYMid meet"
      style={
        {
          "height": "100%",
          "width": "100%",
        }
      }
      viewBox="0 0 32 32"
    >
      <G
        originX="16"
        originY="16"
        rotation={-90}
      >
        <Circle
          cx="50%"
          cy="50%"
          fill="transparent"
          r={12.5}
          stroke="#FEEDE5"
          strokeWidth={7}
        />
        <ForwardRef(AnimatedComponentWrapper)
          cx="50%"
          cy="50%"
          fill="transparent"
          r={12.5}
          stroke="#F56522"
          strokeDasharray={78.53981633974483}
          strokeDashoffset={62.83185307179586}
          strokeWidth={7}
        />
      </G>
    </Svg>
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <PeachText
        style={
          [
            {
              "fontSize": 12,
              "fontWeight": "bold",
            },
            {
              "fontSize": 16,
            },
            {
              "marginTop": 2,
            },
          ]
        }
      >
        1
      </PeachText>
    </View>
  </View>
</View>
`;

exports[`ProgressDonut should render correctly when empty 1`] = `
<View
  style={
    [
      {
        "alignItems": "center",
      },
      undefined,
    ]
  }
>
  <PeachText
    style={
      [
        {
          "color": "#F56522",
          "fontSize": 12,
          "fontWeight": "bold",
          "textAlign": "center",
        },
        {},
      ]
    }
  >
    Donut Test
  </PeachText>
  <View
    style={
      [
        {
          "height": 32,
          "width": 32,
        },
        {},
      ]
    }
  >
    <Svg
      preserveAspectRatio="xMidYMid meet"
      style={
        {
          "height": "100%",
          "width": "100%",
        }
      }
      viewBox="0 0 32 32"
    >
      <G
        originX="16"
        originY="16"
        rotation={-90}
      >
        <Circle
          cx="50%"
          cy="50%"
          fill="transparent"
          r={12.5}
          stroke="#FEEDE5"
          strokeWidth={7}
        />
        <ForwardRef(AnimatedComponentWrapper)
          cx="50%"
          cy="50%"
          fill="transparent"
          r={12.5}
          stroke="#F56522"
          strokeDasharray={78.53981633974483}
          strokeDashoffset={62.83185307179586}
          strokeWidth={7}
        />
      </G>
    </Svg>
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <PeachText
        style={
          [
            {
              "fontSize": 12,
              "fontWeight": "bold",
            },
            {},
            undefined,
          ]
        }
      >
        0
      </PeachText>
    </View>
  </View>
</View>
`;

exports[`ProgressDonut should render correctly when full 1`] = `
<View
  style={
    [
      {
        "alignItems": "center",
      },
      undefined,
    ]
  }
>
  <PeachText
    style={
      [
        {
          "color": "#F56522",
          "fontSize": 12,
          "fontWeight": "bold",
          "textAlign": "center",
        },
        {},
      ]
    }
  >
    Donut Test
  </PeachText>
  <View
    style={
      [
        {
          "height": 32,
          "width": 32,
        },
        {},
      ]
    }
  >
    <Svg
      preserveAspectRatio="xMidYMid meet"
      style={
        {
          "height": "100%",
          "width": "100%",
        }
      }
      viewBox="0 0 32 32"
    >
      <G
        originX="16"
        originY="16"
        rotation={-90}
      >
        <Circle
          cx="50%"
          cy="50%"
          fill="transparent"
          r={12.5}
          stroke="#FEEDE5"
          strokeWidth={7}
        />
        <ForwardRef(AnimatedComponentWrapper)
          cx="50%"
          cy="50%"
          fill="transparent"
          r={12.5}
          stroke="#F56522"
          strokeDasharray={78.53981633974483}
          strokeDashoffset={62.83185307179586}
          strokeWidth={7}
        />
      </G>
    </Svg>
    <View
      style={
        {
          "alignItems": "center",
          "height": "100%",
          "justifyContent": "center",
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <PeachText
        style={
          [
            {
              "fontSize": 12,
              "fontWeight": "bold",
            },
            {},
            undefined,
          ]
        }
      >
        5
      </PeachText>
    </View>
  </View>
</View>
`;
