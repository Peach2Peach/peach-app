// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BitcoinAddress should render correctly 1`] = `
<React.Fragment>
  <Memo(Pressable)
    onLongPress={[Function]}
    onPress={[Function]}
  >
    <ForwardRef(AnimatedComponentWrapper)
      style={
        {
          "opacity": 0,
        }
      }
    >
      <PeachText
        style={
          [
            {
              "fontFamily": "Baloo2-SemiBold",
              "fontSize": 14,
              "letterSpacing": 0.14,
              "lineHeight": 22,
              "textAlign": "center",
            },
            {
              "bottom": "100%",
              "left": "50%",
              "marginLeft": -40,
              "position": "absolute",
              "width": 80,
            },
          ]
        }
      >
        copied!
      </PeachText>
    </ForwardRef(AnimatedComponentWrapper)>
    <QRCode
      backgroundColor="#FFF9F6"
      size={327}
      value="bitcoin:bcrt1q70z7vw93cxs6jx7nav9cmcn5qvlv362qfudnqmz9fnk2hjvz5nus4c0fuh"
    />
  </Memo(Pressable)>
  <View
    style={
      {
        "alignItems": "stretch",
        "flexDirection": "row",
        "gap": 8,
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "#BAADA7",
          "borderRadius": 12,
          "borderWidth": 1,
          "flexShrink": 1,
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <PeachText
        style={
          {
            "color": "#9F8C82",
          }
        }
      >
        bcrt
        <PeachText
          style={
            {
              "color": "#2B1911",
            }
          }
        >
          1q70z
        </PeachText>
        7vw93cxs6jx7nav9cmcn5qvlv362qfudnqmz9fnk2hjvz5nus4
        <PeachText
          style={
            {
              "color": "#2B1911",
            }
          }
        >
          c0fuh
        </PeachText>
      </PeachText>
      <ForwardRef(AnimatedComponentWrapper)
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "#FFFCFA",
              "height": "100%",
              "justifyContent": "center",
              "position": "absolute",
              "width": "100%",
            },
            {
              "opacity": 0,
            },
          ]
        }
      >
        <PeachText
          style={
            {
              "fontFamily": "Baloo2-SemiBold",
              "fontSize": 16,
              "letterSpacing": 0.16,
              "lineHeight": 28,
              "textAlign": "center",
            }
          }
        >
          copied!
        </PeachText>
      </ForwardRef(AnimatedComponentWrapper)>
    </View>
    <View
      style={
        {
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <IconButton
        iconId="copy"
        onPress={[Function]}
      />
      <IconButton
        iconId="externalLink"
        onPress={[Function]}
      />
    </View>
  </View>
</React.Fragment>
`;

exports[`BitcoinAddress should render correctly for small screens 1`] = `
<React.Fragment>
  <Memo(Pressable)
    onLongPress={[Function]}
    onPress={[Function]}
  >
    <ForwardRef(AnimatedComponentWrapper)
      style={
        {
          "opacity": undefined,
        }
      }
    >
      <PeachText
        style={
          [
            {
              "fontFamily": "Baloo2-SemiBold",
              "fontSize": 14,
              "letterSpacing": 0.14,
              "lineHeight": 22,
              "textAlign": "center",
            },
            {
              "bottom": "100%",
              "left": "50%",
              "marginLeft": -40,
              "position": "absolute",
              "width": 80,
            },
          ]
        }
      >
        copied!
      </PeachText>
    </ForwardRef(AnimatedComponentWrapper)>
    <QRCode
      backgroundColor="#FFF9F6"
      size={242}
      value="bitcoin:bcrt1q70z7vw93cxs6jx7nav9cmcn5qvlv362qfudnqmz9fnk2hjvz5nus4c0fuh"
    />
  </Memo(Pressable)>
  <View
    style={
      {
        "alignItems": "stretch",
        "flexDirection": "row",
        "gap": 8,
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "#BAADA7",
          "borderRadius": 12,
          "borderWidth": 1,
          "flexShrink": 1,
          "justifyContent": "center",
          "paddingBottom": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 8,
        }
      }
    >
      <PeachText
        style={
          {
            "color": "#9F8C82",
          }
        }
      >
        bcrt
        <PeachText
          style={
            {
              "color": "#2B1911",
            }
          }
        >
          1q70z
        </PeachText>
        7vw93cxs6jx7nav9cmcn5qvlv362qfudnqmz9fnk2hjvz5nus4
        <PeachText
          style={
            {
              "color": "#2B1911",
            }
          }
        >
          c0fuh
        </PeachText>
      </PeachText>
      <ForwardRef(AnimatedComponentWrapper)
        style={
          [
            {
              "alignItems": "center",
              "backgroundColor": "#FFFCFA",
              "height": "100%",
              "justifyContent": "center",
              "position": "absolute",
              "width": "100%",
            },
            {
              "opacity": 0,
            },
          ]
        }
      >
        <PeachText
          style={
            {
              "fontFamily": "Baloo2-SemiBold",
              "fontSize": 16,
              "letterSpacing": 0.16,
              "lineHeight": 28,
              "textAlign": "center",
            }
          }
        >
          copied!
        </PeachText>
      </ForwardRef(AnimatedComponentWrapper)>
    </View>
    <View
      style={
        {
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <IconButton
        iconId="copy"
        onPress={[Function]}
      />
      <IconButton
        iconId="externalLink"
        onPress={[Function]}
      />
    </View>
  </View>
</React.Fragment>
`;
