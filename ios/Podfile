$RNFirebaseAnalyticsWithoutAdIdSupport=true

require_relative '../node_modules/react-native-permissions/scripts/setup'

# Resolve react_native_pods.rb with node to allow for hoisting

require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

setup_permissions([
  'Camera',
  'Notifications',
])

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
	Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
	use_frameworks! :linkage => linkage.to_sym
end

abstract_target 'peach' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )


  pod 'react-native-fast-openpgp', :path => '../node_modules/react-native-fast-openpgp'

  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec', :modular_headers => false

  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'FirebaseInstallations', :modular_headers => true
  pod 'FirebaseSessions', :modular_headers => true
  pod 'GoogleDataTransport', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'nanopb', :modular_headers => true

  target 'peach mainnet' do
    inherit! :complete
    # Pods for testnet
  end

  target 'peach testnet' do
    inherit! :complete
    # Pods for testnet
  end

  target 'peach regtest' do
    inherit! :complete
    # Pods for testnet
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
  end
end
